/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
$facebook-name: 'facebook'
$facebook-x: 0px
$facebook-y: 0px
$facebook-offset-x: 0px
$facebook-offset-y: 0px
$facebook-width: 34px
$facebook-height: 34px
$facebook-total-width: 85px
$facebook-total-height: 79px
$facebook-image: '../img/sprite.png'
$facebook: (0px, 0px, 0px, 0px, 34px, 34px, 85px, 79px, '../img/sprite.png', 'facebook', )
$header-mail-name: 'header_mail'
$header-mail-x: 68px
$header-mail-y: 0px
$header-mail-offset-x: -68px
$header-mail-offset-y: 0px
$header-mail-width: 17px
$header-mail-height: 19px
$header-mail-total-width: 85px
$header-mail-total-height: 79px
$header-mail-image: '../img/sprite.png'
$header-mail: (68px, 0px, -68px, 0px, 17px, 19px, 85px, 79px, '../img/sprite.png', 'header_mail', )
$instagram-name: 'instagram'
$instagram-x: 34px
$instagram-y: 0px
$instagram-offset-x: -34px
$instagram-offset-y: 0px
$instagram-width: 34px
$instagram-height: 34px
$instagram-total-width: 85px
$instagram-total-height: 79px
$instagram-image: '../img/sprite.png'
$instagram: (34px, 0px, -34px, 0px, 34px, 34px, 85px, 79px, '../img/sprite.png', 'instagram', )
$marker-name: 'marker'
$marker-x: 68px
$marker-y: 19px
$marker-offset-x: -68px
$marker-offset-y: -19px
$marker-width: 16px
$marker-height: 13px
$marker-total-width: 85px
$marker-total-height: 79px
$marker-image: '../img/sprite.png'
$marker: (68px, 19px, -68px, -19px, 16px, 13px, 85px, 79px, '../img/sprite.png', 'marker', )
$twitter-name: 'twitter'
$twitter-x: 0px
$twitter-y: 34px
$twitter-offset-x: 0px
$twitter-offset-y: -34px
$twitter-width: 34px
$twitter-height: 34px
$twitter-total-width: 85px
$twitter-total-height: 79px
$twitter-image: '../img/sprite.png'
$twitter: (0px, 34px, 0px, -34px, 34px, 34px, 85px, 79px, '../img/sprite.png', 'twitter', )
$vk-icon-name: 'vk-icon'
$vk-icon-x: 0px
$vk-icon-y: 68px
$vk-icon-offset-x: 0px
$vk-icon-offset-y: -68px
$vk-icon-width: 21px
$vk-icon-height: 11px
$vk-icon-total-width: 85px
$vk-icon-total-height: 79px
$vk-icon-image: '../img/sprite.png'
$vk-icon: (0px, 68px, 0px, -68px, 21px, 11px, 85px, 79px, '../img/sprite.png', 'vk-icon', )
$vk-name: 'vk'
$vk-x: 34px
$vk-y: 34px
$vk-offset-x: -34px
$vk-offset-y: -34px
$vk-width: 34px
$vk-height: 34px
$vk-total-width: 85px
$vk-total-height: 79px
$vk-image: '../img/sprite.png'
$vk: (34px, 34px, -34px, -34px, 34px, 34px, 85px, 79px, '../img/sprite.png', 'vk', )
$spritesheet-width: 85px
$spritesheet-height: 79px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($facebook, $header-mail, $instagram, $marker, $twitter, $vk-icon, $vk, )
$spritesheet: (85px, 79px, '../img/sprite.png', $spritesheet-sprites, )

/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)

  Example usage in HTML:
    `display: block` sprite:
    <div class="icon-home"></div>

  To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
    // CSS
    .icon {
      display: inline-block;
    }

    // HTML
    <i class="icon icon-home"></i>
  */
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
